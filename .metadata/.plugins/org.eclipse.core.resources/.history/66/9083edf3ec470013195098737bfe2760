package reflection.utilClasses;

/**
 * @author kapilbijamwar & PrajaktaMore Debugger class that maintains logging
 *         information
 */
public class Debug {

	/**
	 * Integer Variable DEBUG_VALUE used for Logger
	 */
	private static int DEBUG_VALUE;

	// accessor and mutator for DEBUG_VALUE

	/**
	 * @return the dEBUG_VALUE
	 */
	public static int getDEBUG_VALUE() {
		return DEBUG_VALUE;
	}

	/**
	 * @param dEBUG_VALUE
	 *            the dEBUG_VALUE to set
	 */
	public static void setDEBUG_VALUE(int dEBUG_VALUE, String className) {
		DEBUG_VALUE = dEBUG_VALUE;
		if (DEBUG_VALUE == 4) {
			System.out.println(className + "Constructor is Called");
		} else if (DEBUG_VALUE == 3) {
			System.out.println(className + "Deserialize method is called");
		} else if (DEBUG_VALUE == 2) {
			System.out.println("Serialize to the Results data structure");
		} else if (DEBUG_VALUE == 1) {
			System.out.println("Stdout the Serialize file");
		} else if (DEBUG_VALUE == 0) {
			System.out.println("Debug Value Selected is No output printed");
			System.exit(0);

		}
	}

}